apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "dependency-track.fullname" . }}
  labels:
    {{- include "dependency-track.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "dependency-track.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "dependency-track.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "dependency-track.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: ALPINE_DATABASE_MODE
            value: "server"
          - name: ALPINE_DATABASE_DRIVER
            value: "com.mysql.jdbc.Driver"
          - name: ALPINE_DATABASE_DRIVER_PATH
            value: "/extlib/mysql-connector-java-5.1.47.jar"
          - name: ALPINE_DATABASE_URL
            value: "jdbc:mysql://10.37.224.3:3306/dtrace-master"
          - name: ALPINE_DATABASE_USERNAME
            valueFrom:
              secretKeyRef:
                name: cloudsql-db-credentials
                key: username
          - name: ALPINE_DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: cloudsql-db-credentials
                key: password
          - name: ALPINE_CORS_ENABLED
            value: "true"
          - name: ALPINE_CORS_ALLOW_ORIGIN
            value: "deptrack.appthreat.io"
          - name: ALPINE_CORS_ALLOW_METHODS
            value: "GET POST PUT DELETE OPTIONS"            
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/version
              port: http
          readinessProbe:
            httpGet:
              path: /api/version
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: deptrack-data
            mountPath: /data
      volumes:
      - name: deptrack-data
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ template "dependency-track.fullname" . }}
      {{- else }}
        emptyDir: {}
      {{- end }}      
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
